generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model assets {
  id        String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  userid    String?   @db.Uuid
  type      String?
  subtype   String?
  data      Json?
  createdat DateTime? @default(now()) @db.Timestamptz(6)
  updatedat DateTime? @default(now()) @db.Timestamptz(6)
  users     users?    @relation(fields: [userid], references: [userid], onDelete: Cascade, onUpdate: NoAction)
}

model beneficiaries {
  id        String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  userid    String?   @db.Uuid
  type      String?
  data      Json?
  createdat DateTime? @default(now()) @db.Timestamptz(6)
  updatedat DateTime? @default(now()) @db.Timestamptz(6)
  users     users?    @relation(fields: [userid], references: [userid], onDelete: Cascade, onUpdate: NoAction)
}

model liabilities {
  id        String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  userid    String?   @db.Uuid
  type      String?
  data      Json?
  createdat DateTime? @default(now()) @db.Timestamptz(6)
  updatedat DateTime? @default(now()) @db.Timestamptz(6)
  users     users?    @relation(fields: [userid], references: [userid], onDelete: Cascade, onUpdate: NoAction)
}

model pets {
  id        String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  userid    String?   @db.Uuid
  data      Json?
  createdat DateTime? @default(now()) @db.Timestamptz(6)
  updatedat DateTime? @default(now()) @db.Timestamptz(6)
  users     users?    @relation(fields: [userid], references: [userid], onDelete: Cascade, onUpdate: NoAction)
}

model users {
  userid          String            @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  phonenumber     String            @unique
  createdat       DateTime?         @default(now()) @db.Timestamptz(6)
  updatedat       DateTime?         @default(now()) @db.Timestamptz(6)
  addressdetails  addressdetails?
  assets          assets[]
  beneficiaries   beneficiaries[]
  excludedpersons excludedpersons[]
  liabilities     liabilities[]
  personaldetails personaldetails?
  pets            pets[]
}

model addressdetails {
  id        String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  userid    String    @unique(map: "uniqueuserid") @db.Uuid
  address   Json
  createdat DateTime? @default(now()) @db.Timestamptz(6)
  updatedat DateTime? @default(now()) @db.Timestamptz(6)
  users     users     @relation(fields: [userid], references: [userid], onDelete: Cascade, onUpdate: NoAction)
}

model excludedpersons {
  id        String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  userid    String?   @db.Uuid
  data      Json?
  createdat DateTime? @default(now()) @db.Timestamptz(6)
  updatedat DateTime? @default(now()) @db.Timestamptz(6)
  users     users?    @relation(fields: [userid], references: [userid], onDelete: Cascade, onUpdate: NoAction)
}

model personaldetails {
  id        String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  userid    String    @unique(map: "uniqueuseridpd") @db.Uuid
  details   Json
  createdat DateTime? @default(now()) @db.Timestamptz(6)
  updatedat DateTime? @default(now()) @db.Timestamptz(6)
  users     users     @relation(fields: [userid], references: [userid], onDelete: Cascade, onUpdate: NoAction)
}
