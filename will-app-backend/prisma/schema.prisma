generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model assets {
  id        String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  userid    String?   @db.Uuid
  type      String?
  subtype   String?
  data      Json?
  createdat DateTime? @default(now()) @db.Timestamptz(6)
  updatedat DateTime? @default(now()) @db.Timestamptz(6)
  users     users?    @relation(fields: [userid], references: [userid], onDelete: Cascade, onUpdate: NoAction)
}

model beneficiaries {
  id                                                                                                      String                            @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  userid                                                                                                  String?                           @db.Uuid
  type                                                                                                    String?
  data                                                                                                    Json?
  createdat                                                                                               DateTime?                         @default(now()) @db.Timestamptz(6)
  updatedat                                                                                               DateTime?                         @default(now()) @db.Timestamptz(6)
  users                                                                                                   users?                            @relation(fields: [userid], references: [userid], onDelete: Cascade, onUpdate: NoAction)
  single_beneficiary_distribution_single_beneficiary_distribution_primary_beneficiary_idTobeneficiaries   single_beneficiary_distribution[] @relation("single_beneficiary_distribution_primary_beneficiary_idTobeneficiaries")
  single_beneficiary_distribution_single_beneficiary_distribution_secondary_beneficiary_idTobeneficiaries single_beneficiary_distribution[] @relation("single_beneficiary_distribution_secondary_beneficiary_idTobeneficiaries")
  single_beneficiary_distribution_single_beneficiary_distribution_tertiary_beneficiary_idTobeneficiaries  single_beneficiary_distribution[] @relation("single_beneficiary_distribution_tertiary_beneficiary_idTobeneficiaries")
}

model liabilities {
  id        String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  userid    String?   @db.Uuid
  type      String?
  data      Json?
  createdat DateTime? @default(now()) @db.Timestamptz(6)
  updatedat DateTime? @default(now()) @db.Timestamptz(6)
  users     users?    @relation(fields: [userid], references: [userid], onDelete: Cascade, onUpdate: NoAction)
}

model pets {
  id        String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  userid    String?   @db.Uuid
  data      Json?
  createdat DateTime? @default(now()) @db.Timestamptz(6)
  updatedat DateTime? @default(now()) @db.Timestamptz(6)
  users     users?    @relation(fields: [userid], references: [userid], onDelete: Cascade, onUpdate: NoAction)
}

model users {
  userid                          String                           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  phonenumber                     String                           @unique
  createdat                       DateTime?                        @default(now()) @db.Timestamptz(6)
  updatedat                       DateTime?                        @default(now()) @db.Timestamptz(6)
  addressdetails                  addressdetails?
  assets                          assets[]
  beneficiaries                   beneficiaries[]
  excludedpersons                 excludedpersons[]
  liabilities                     liabilities[]
  percentage_distribution         percentage_distribution?
  personaldetails                 personaldetails?
  pets                            pets[]
  residuary_asset_distribution    residuary_asset_distribution?
  selectedassets                  selectedassets?
  single_beneficiary_distribution single_beneficiary_distribution?
  specific_asset_distribution     specific_asset_distribution?
  will_distribution               will_distribution?
}

model single_beneficiary_distribution {
  user_id                                                                               String         @id @db.Uuid
  primary_beneficiary_id                                                                String         @db.Uuid
  secondary_beneficiary_id                                                              String?        @db.Uuid
  tertiary_beneficiary_id                                                               String?        @db.Uuid
  created_at                                                                            DateTime?      @default(now()) @db.Timestamptz(6)
  updated_at                                                                            DateTime?      @default(now()) @db.Timestamptz(6)
  beneficiaries_single_beneficiary_distribution_primary_beneficiary_idTobeneficiaries   beneficiaries  @relation("single_beneficiary_distribution_primary_beneficiary_idTobeneficiaries", fields: [primary_beneficiary_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  beneficiaries_single_beneficiary_distribution_secondary_beneficiary_idTobeneficiaries beneficiaries? @relation("single_beneficiary_distribution_secondary_beneficiary_idTobeneficiaries", fields: [secondary_beneficiary_id], references: [id], onUpdate: NoAction)
  beneficiaries_single_beneficiary_distribution_tertiary_beneficiary_idTobeneficiaries  beneficiaries? @relation("single_beneficiary_distribution_tertiary_beneficiary_idTobeneficiaries", fields: [tertiary_beneficiary_id], references: [id], onUpdate: NoAction)
  users                                                                                 users          @relation(fields: [user_id], references: [userid], onDelete: Cascade, onUpdate: NoAction)
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model will_distribution {
  user_id                     String    @id @db.Uuid
  distribution_type           String    @db.VarChar(20)
  residuary_distribution_type String?   @db.VarChar(20)
  fallback_rule               String?
  created_at                  DateTime? @default(now()) @db.Timestamptz(6)
  updated_at                  DateTime? @default(now()) @db.Timestamptz(6)
  users                       users     @relation(fields: [user_id], references: [userid], onDelete: Cascade, onUpdate: NoAction)
}

model percentage_distribution {
  user_id       String    @id @db.Uuid
  beneficiaries Json
  is_residuary  Boolean   @default(false)
  created_at    DateTime? @default(now()) @db.Timestamptz(6)
  updated_at    DateTime? @default(now()) @db.Timestamptz(6)
  users         users     @relation(fields: [user_id], references: [userid], onDelete: Cascade, onUpdate: NoAction)
}

model residuary_asset_distribution {
  user_id       String    @id @db.Uuid
  beneficiaries Json
  is_residuary  Boolean   @default(false)
  created_at    DateTime? @default(now()) @db.Timestamptz(6)
  updated_at    DateTime? @default(now()) @db.Timestamptz(6)
  users         users     @relation(fields: [user_id], references: [userid], onDelete: Cascade, onUpdate: NoAction)
}

model specific_asset_distribution {
  user_id    String    @id @db.Uuid
  assets     Json
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  updated_at DateTime? @default(now()) @db.Timestamptz(6)
  users      users     @relation(fields: [user_id], references: [userid], onDelete: Cascade, onUpdate: NoAction)
}

model addressdetails {
  id        String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  userid    String    @unique(map: "uniqueuserid") @db.Uuid
  address   Json
  createdat DateTime? @default(now()) @db.Timestamptz(6)
  updatedat DateTime? @default(now()) @db.Timestamptz(6)
  users     users     @relation(fields: [userid], references: [userid], onDelete: Cascade, onUpdate: NoAction)
}

model excludedpersons {
  id        String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  userid    String?   @db.Uuid
  data      Json?
  createdat DateTime? @default(now()) @db.Timestamptz(6)
  updatedat DateTime? @default(now()) @db.Timestamptz(6)
  users     users?    @relation(fields: [userid], references: [userid], onDelete: Cascade, onUpdate: NoAction)
}

model personaldetails {
  id        String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  userid    String    @unique(map: "uniqueuseridpd") @db.Uuid
  details   Json
  createdat DateTime? @default(now()) @db.Timestamptz(6)
  updatedat DateTime? @default(now()) @db.Timestamptz(6)
  users     users     @relation(fields: [userid], references: [userid], onDelete: Cascade, onUpdate: NoAction)
}

model selectedassets {
  id        String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  userid    String    @unique(map: "uniqueuseridselectedassets") @db.Uuid
  data      Json
  createdat DateTime? @default(now()) @db.Timestamptz(6)
  updatedat DateTime? @default(now()) @db.Timestamptz(6)
  users     users     @relation(fields: [userid], references: [userid], onDelete: Cascade, onUpdate: NoAction)
}
