generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model address_details {
  id         Int       @id @default(autoincrement())
  user_id    Int?
  data       Json?
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  updated_at DateTime? @default(now()) @db.Timestamptz(6)
  users      users?    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model assets {
  id         Int       @id @default(autoincrement())
  user_id    Int?
  type       String?
  subtype    String?
  data       Json?
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  updated_at DateTime? @default(now()) @db.Timestamptz(6)
  users      users?    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model beneficiaries {
  id         Int       @id @default(autoincrement())
  user_id    Int?
  type       String?
  data       Json?
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  updated_at DateTime? @default(now()) @db.Timestamptz(6)
  users      users?    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model excluded_persons {
  id         Int       @id @default(autoincrement())
  user_id    Int?
  data       Json?
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  updated_at DateTime? @default(now()) @db.Timestamptz(6)
  users      users?    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model liabilities {
  id         Int       @id @default(autoincrement())
  user_id    Int?
  type       String?
  data       Json?
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  updated_at DateTime? @default(now()) @db.Timestamptz(6)
  users      users?    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model pets {
  id         Int       @id @default(autoincrement())
  user_id    Int?
  data       Json?
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  updated_at DateTime? @default(now()) @db.Timestamptz(6)
  users      users?    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model test {
  id        Int     @id @default(autoincrement())
  full_name String?
}

model users {
  id               Int                @id @default(autoincrement())
  full_name        String?
  father_name      String?
  phone_number     String? @unique
  user_name        String?
  password         String?
  gender           String?
  dob              DateTime?          @db.Date
  religion         String?
  aadhaar_number   String?
  created_at       DateTime?          @default(now()) @db.Timestamptz(6)
  updated_at       DateTime?          @default(now()) @db.Timestamptz(6)
  address_details  address_details[]
  assets           assets[]
  beneficiaries    beneficiaries[]
  excluded_persons excluded_persons[]
  liabilities      liabilities[]
  pets             pets[]
}
