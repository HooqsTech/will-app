generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model assets {
  id        String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  userid    String?   @db.Uuid
  type      String?
  subtype   String?
  data      Json?
  createdat DateTime? @default(now()) @db.Timestamptz(6)
  updatedat DateTime? @default(now()) @db.Timestamptz(6)
  users     users?    @relation(fields: [userid], references: [userid], onDelete: Cascade, onUpdate: NoAction)
}

model beneficiaries {
  id                                                                                                    String                            @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  userid                                                                                                String?                           @db.Uuid
  type                                                                                                  String?
  data                                                                                                  Json?
  createdat                                                                                             DateTime?                         @default(now()) @db.Timestamptz(6)
  updatedat                                                                                             DateTime?                         @default(now()) @db.Timestamptz(6)
  users                                                                                                 users?                            @relation(fields: [userid], references: [userid], onDelete: Cascade, onUpdate: NoAction)
  single_beneficiary_distribution_single_beneficiary_distribution_primarybeneficiaryidTobeneficiaries   single_beneficiary_distribution[] @relation("single_beneficiary_distribution_primarybeneficiaryidTobeneficiaries")
  single_beneficiary_distribution_single_beneficiary_distribution_secondarybeneficiaryidTobeneficiaries single_beneficiary_distribution[] @relation("single_beneficiary_distribution_secondarybeneficiaryidTobeneficiaries")
  single_beneficiary_distribution_single_beneficiary_distribution_tertiarybeneficiaryidTobeneficiaries  single_beneficiary_distribution[] @relation("single_beneficiary_distribution_tertiarybeneficiaryidTobeneficiaries")
}

model liabilities {
  id        String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  userid    String?   @db.Uuid
  type      String?
  data      Json?
  createdat DateTime? @default(now()) @db.Timestamptz(6)
  updatedat DateTime? @default(now()) @db.Timestamptz(6)
  users     users?    @relation(fields: [userid], references: [userid], onDelete: Cascade, onUpdate: NoAction)
}

model pets {
  id        String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  userid    String?   @db.Uuid
  data      Json?
  createdat DateTime? @default(now()) @db.Timestamptz(6)
  updatedat DateTime? @default(now()) @db.Timestamptz(6)
  users     users?    @relation(fields: [userid], references: [userid], onDelete: Cascade, onUpdate: NoAction)
}

model users {
  userid                          String                           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  phonenumber                     String                           @unique
  createdat                       DateTime?                        @default(now()) @db.Timestamptz(6)
  updatedat                       DateTime?                        @default(now()) @db.Timestamptz(6)
  addressdetails                  addressdetails?
  assets                          assets[]
  beneficiaries                   beneficiaries[]
  excludedpersons                 excludedpersons[]
  liabilities                     liabilities[]
  paymentorders                   paymentorders[]
  percentage_distribution         percentage_distribution?
  personaldetails                 personaldetails?
  pets                            pets[]
  residuary_asset_distribution    residuary_asset_distribution?
  selectedassets                  selectedassets?
  single_beneficiary_distribution single_beneficiary_distribution?
  specific_asset_distribution     specific_asset_distribution?
  will_distribution               will_distribution?
}

model single_beneficiary_distribution {
  userid                                                                              String         @id @db.Uuid
  primarybeneficiaryid                                                                String         @db.Uuid
  secondarybeneficiaryid                                                              String?        @db.Uuid
  tertiarybeneficiaryid                                                               String?        @db.Uuid
  createdat                                                                           DateTime?      @default(now()) @db.Timestamptz(6)
  updatedat                                                                           DateTime?      @default(now()) @db.Timestamptz(6)
  beneficiaries_single_beneficiary_distribution_primarybeneficiaryidTobeneficiaries   beneficiaries  @relation("single_beneficiary_distribution_primarybeneficiaryidTobeneficiaries", fields: [primarybeneficiaryid], references: [id], onDelete: Cascade, onUpdate: NoAction)
  beneficiaries_single_beneficiary_distribution_secondarybeneficiaryidTobeneficiaries beneficiaries? @relation("single_beneficiary_distribution_secondarybeneficiaryidTobeneficiaries", fields: [secondarybeneficiaryid], references: [id], onUpdate: NoAction)
  beneficiaries_single_beneficiary_distribution_tertiarybeneficiaryidTobeneficiaries  beneficiaries? @relation("single_beneficiary_distribution_tertiarybeneficiaryidTobeneficiaries", fields: [tertiarybeneficiaryid], references: [id], onUpdate: NoAction)
  users                                                                               users          @relation(fields: [userid], references: [userid], onDelete: Cascade, onUpdate: NoAction)
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model will_distribution {
  userid                    String    @id @db.Uuid
  distributiontype          String    @db.VarChar(20)
  residuarydistributiontype String?   @db.VarChar(20)
  fallbackrule              String?
  createdat                 DateTime? @default(now()) @db.Timestamptz(6)
  updatedat                 DateTime? @default(now()) @db.Timestamptz(6)
  users                     users     @relation(fields: [userid], references: [userid], onDelete: Cascade, onUpdate: NoAction)
}

model percentage_distribution {
  userid        String    @id @db.Uuid
  beneficiaries Json
  createdat     DateTime? @default(now()) @db.Timestamptz(6)
  updatedat     DateTime? @default(now()) @db.Timestamptz(6)
  users         users     @relation(fields: [userid], references: [userid], onDelete: Cascade, onUpdate: NoAction)
}

model residuary_asset_distribution {
  userid        String    @id @db.Uuid
  beneficiaries Json
  createdat     DateTime? @default(now()) @db.Timestamptz(6)
  updatedat     DateTime? @default(now()) @db.Timestamptz(6)
  users         users     @relation(fields: [userid], references: [userid], onDelete: Cascade, onUpdate: NoAction)
}

model specific_asset_distribution {
  userid    String    @id @db.Uuid
  assets    Json
  createdat DateTime? @default(now()) @db.Timestamptz(6)
  updatedat DateTime? @default(now()) @db.Timestamptz(6)
  users     users     @relation(fields: [userid], references: [userid], onDelete: Cascade, onUpdate: NoAction)
}

model addressdetails {
  id        String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  userid    String    @unique(map: "uniqueuserid") @db.Uuid
  address   Json
  createdat DateTime? @default(now()) @db.Timestamptz(6)
  updatedat DateTime? @default(now()) @db.Timestamptz(6)
  users     users     @relation(fields: [userid], references: [userid], onDelete: Cascade, onUpdate: NoAction)
}

model excludedpersons {
  id        String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  userid    String?   @db.Uuid
  data      Json?
  createdat DateTime? @default(now()) @db.Timestamptz(6)
  updatedat DateTime? @default(now()) @db.Timestamptz(6)
  users     users?    @relation(fields: [userid], references: [userid], onDelete: Cascade, onUpdate: NoAction)
}

model personaldetails {
  id        String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  userid    String    @unique(map: "uniqueuseridpd") @db.Uuid
  details   Json
  createdat DateTime? @default(now()) @db.Timestamptz(6)
  updatedat DateTime? @default(now()) @db.Timestamptz(6)
  users     users     @relation(fields: [userid], references: [userid], onDelete: Cascade, onUpdate: NoAction)
}

model selectedassets {
  id        String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  userid    String    @unique(map: "uniqueuseridselectedassets") @db.Uuid
  data      Json
  createdat DateTime? @default(now()) @db.Timestamptz(6)
  updatedat DateTime? @default(now()) @db.Timestamptz(6)
  users     users     @relation(fields: [userid], references: [userid], onDelete: Cascade, onUpdate: NoAction)
}

model service_categories {
  id              String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  categoryname    String     @unique @db.VarChar(50)
  standardprice   Decimal    @db.Decimal(10, 2)
  discountedprice Decimal?   @db.Decimal(10, 2)
  description     String?
  createdat       DateTime?  @default(now()) @db.Timestamp(6)
  updatedat       DateTime?  @default(now()) @db.Timestamp(6)
  services        services[]
}

model services {
  id                 String             @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  servicename        String             @db.VarChar(100)
  categoryid         String             @db.Uuid
  standardprice      Decimal            @db.Decimal(10, 2)
  discountedprice    Decimal?           @db.Decimal(10, 2)
  createdat          DateTime?          @default(now()) @db.Timestamp(6)
  updatedat          DateTime?          @default(now()) @db.Timestamp(6)
  service_categories service_categories @relation(fields: [categoryid], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model paymentorders {
  orderid      String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  razororderid String?   @db.VarChar(100)
  amount       Int
  userid       String    @db.Uuid
  createdat    DateTime? @default(now()) @db.Timestamptz(6)
  updatedat    DateTime? @default(now()) @db.Timestamptz(6)
  users        users     @relation(fields: [userid], references: [userid], onDelete: Cascade, onUpdate: NoAction)
}

model razorpaymentevents {
  razorpaymenteventid String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  razororderid        String    @db.VarChar(100)
  event               String    @db.VarChar(100)
  eventpayload        Json
  createdat           DateTime? @default(now()) @db.Timestamptz(6)
  updatedat           DateTime? @default(now()) @db.Timestamptz(6)
}
